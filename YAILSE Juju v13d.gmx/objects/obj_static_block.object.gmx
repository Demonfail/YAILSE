<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_static_block</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>obj_par_block</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

scr_lighting_caster_create();

image_index = 0;
image_speed = 0;

//The (-0.5,-0.5) offset is a bit of a hack to stop self-lighting being too obviously flickery
var L =  -sprite_get_width( sprite_index ) * 0.5 - 0.5;
var T = -sprite_get_height( sprite_index ) * 0.5 - 0.5;
var R =   sprite_get_width( sprite_index ) * 0.5 - 0.5;
var B =  sprite_get_height( sprite_index ) * 0.5 - 0.5;

if ( image_angle != 0 ) or ( image_xscale != 1 ) or ( image_yscale != 1 ) {
    
    //--- If this instance has been rotated or stretched in the room editor, add every side as a shadow caster
    //Use clockwise definitions!
    scr_lighting_caster_add_geometry( L, T,   R, T ); //Top
    scr_lighting_caster_add_geometry( R, T,   R, B ); //Right
    scr_lighting_caster_add_geometry( R, B,   L, B ); //Bottom
    scr_lighting_caster_add_geometry( L, B,   L, T ); //Left
    
} else {
    
    //--- If this instance is axis-aligned and non-stretched, only add shadow casting sides if they're external
    //Use clockwise definitions!
    if ( !position_meeting( x, y - 32, obj_static_block ) ) scr_lighting_caster_add_geometry( L, T,   R, T ); //Top
    if ( !position_meeting( x + 32, y, obj_static_block ) ) scr_lighting_caster_add_geometry( R, T,   R, B ); //Right
    if ( !position_meeting( x, y + 32, obj_static_block ) ) scr_lighting_caster_add_geometry( R, B,   L, B ); //Bottom
    if ( !position_meeting( x - 32, y, obj_static_block ) ) scr_lighting_caster_add_geometry( L, B,   L, T ); //Left
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
