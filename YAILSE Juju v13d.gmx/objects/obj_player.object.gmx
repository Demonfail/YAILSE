<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

scr_lighting_start( make_colour_rgb( 50, 50, 80 ), true, 0.01 );

scr_vertexPre_start();
vbf_staticBlock     = scr_vertexPre_create( obj_static_block, spr_static_block, 0 );
vbf_staticBlockBump = scr_vertexPre_create( obj_static_block, spr_static_block, 1 );

showDebug = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alarm 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step

//--- Input handling...
var xx = 0;
var yy = 0;

if ( keyboard_check( vk_up    ) ) or ( keyboard_check( ord( "W" ) ) ) yy -= 5;
if ( keyboard_check( vk_down  ) ) or ( keyboard_check( ord( "S" ) ) ) yy += 5;
if ( keyboard_check( vk_left  ) ) or ( keyboard_check( ord( "A" ) ) ) xx -= 5;
if ( keyboard_check( vk_right ) ) or ( keyboard_check( ord( "D" ) ) ) xx += 5;

repeat( abs( xx ) ) if ( !place_meeting( x + sign( xx ), y, obj_par_block ) ) x += sign( xx ) else break;
repeat( abs( yy ) ) if ( !place_meeting( x, y + sign( yy ), obj_par_block ) ) y += sign( yy ) else break;

//--- Misc. controls
if ( keyboard_check_pressed( vk_escape ) ) game_end();
if ( keyboard_check_pressed( vk_f1 ) ) showDebug = !showDebug;

if ( showDebug ) {
    if ( keyboard_check_pressed( ord( "1" ) ) ) with( obj_light_discoooo ) visible = !visible;
    if ( keyboard_check_pressed( ord( "2" ) ) ) lightingSelfLighting = !lightingSelfLighting;
    if ( keyboard_check_pressed( ord( "3" ) ) ) if ( lightingBumpSize == 0.01 ) lightingBumpSize = 0 else lightingBumpSize = 0.01;
}

//--- Shooting
//Note the use of an alarm to control the rate of fire.
if ( mouse_check_button( mb_left ) ) and ( alarm[0] &lt; 0 ) {
    
    alarm[0] = 6;
    
    var inst = instance_create( x, y, obj_light_plasma );
    inst.speed = 10;
    inst.direction = point_direction( x, y, mouse_x, mouse_y ) + random_range( -5, 5 );
    
}

view_xview[LIGHTING_VIEW] = round( x - view_wview[LIGHTING_VIEW] * 0.5 );
view_yview[LIGHTING_VIEW] = round( y - view_hview[LIGHTING_VIEW] * 0.5 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room End

scr_lighting_end();
scr_vertexPre_end();

vertex_delete_buffer( vbf_staticBlock );
vertex_delete_buffer( vbf_staticBlockBump );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI
//Generic HUD

draw_set_color( c_white );

if ( showDebug ) {
    
    var visibleLights = 0;
    with( obj_par_light ) if ( onScreen ) visibleLights++;
    var visibleDynamics = 0;
    with( obj_dynamic_block ) if ( onScreen ) visibleDynamics++;
    
    draw_set_halign( fa_center );
    draw_text( window_get_width() * 0.5, 5, "FPS = " + string( fps ) + " / " + string( floor( fps_real ) ) );
    
    draw_set_halign( fa_left );
    str = "dynamic lights = " + string( instance_number( obj_par_light ) ) + " / visible = " + string( visibleLights );
    str += "#static casters = " + string( instance_number( obj_static_block ) );
    str += "#dynamic casters = " + string( instance_number( obj_dynamic_block ) ) + " / visible = " + string( visibleDynamics );
    draw_text( 5, 5, str );
    
    draw_set_valign( fa_bottom );
    str = "#1: Toggle lights";
    str += "#2: Toggle self-lighting";
    str += "#3: Toggle bump mapping";
    str += "Arrows/WASD: Move";
    str += "#Left click: Fire plasma";
    draw_text( 5, window_get_height() - 5, str );

} else {
    
    draw_set_color( c_white );
    draw_set_halign( fa_center );
    draw_text( window_get_width() * 0.5, 5, "FPS = " + string( fps ) );
    
    draw_set_halign( fa_left );
    draw_set_valign( fa_bottom );
    str = "Press F1 to view debug";
    str += "#Arrows/WASD: Move";
    str += "#Left click: Fire plasma";
    draw_text( 5, window_get_height() - 5, str );
    
}

draw_set_halign( fa_right );
str = "November 2015";
str += "#Juju Adams - @jujuadams";
str += "#After work by xot / John Leffingwell";
draw_text( window_get_width() - 5, window_get_height() - 5, str );

draw_set_halign( fa_left );
draw_set_valign( fa_top );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

vertex_submit( vbf_staticBlock, pr_trianglelist, sprite_get_texture( spr_static_block, 0 ) );

draw_sprite( sprite_index, image_index, x, y );

scr_lighting_build( false );
scr_lighting_draw();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
